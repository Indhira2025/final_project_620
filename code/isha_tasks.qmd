`---
title: "isha_task"
format: html
editor: visual
---
## Data 
```{r}
source("./data_code/funcs.R")
cases_url <- "https://data.cdc.gov/resource/pwn4-m3yp.json"
hosp_url  <- "https://data.cdc.gov/resource/39z2-9zu6.json"
deaths_url <- "https://data.cdc.gov/resource/r8kw-7aab.json"
vax_url   <- "https://data.cdc.gov/resource/rh2h-3yt2.json"
pre_covid_url <- "https://data.cdc.gov/resource/9cpv-whbv.json"
cases_raw <- get_cdc_data(cases_url)
hosp_raw  <- get_cdc_data(hosp_url)
deaths_raw <- get_cdc_data(deaths_url)
vax_raw   <- get_cdc_data(vax_url)
pre_covid_raw <- get_cdc_data(pre_covid_url)
```

#Pre-Processing and Data Exploration 
```{r}
library(dplyr)
library(ggplot2)

covid_deaths <- deaths_raw %>%
  mutate(week_ending_date = as.Date(week_ending_date),
         start_date = as.Date(start_date),
         end_date = as.Date(end_date)) %>% select(-c(data_as_of, pneumonia_deaths, pneumonia_and_covid_19_deaths, influenza_deaths, pneumonia_influenza_or_covid_19_deaths, footnote)) %>%
  filter(group == "By Week") %>%
  filter(!is.na(total_deaths)) 


pre_covid_death <- pre_covid_raw %>% rename(state = jurisdiction, mmwr_week = mmwrweek, year = mmwryear) %>% select(-c(age_group))

colnames(pre_covid_death)
colnames(covid_deaths)
unique(pre_covid_death1$state)
unique(covid_deaths$state)

pre_covid_death1 <- pre_covid_death %>% filter(state %in% covid_deaths$state, !state %in% c("United States", "New York City", "District of Columbia"),!is.na(covid_19_deaths), !is.na(total_deaths))

covid_deaths1 <- covid_deaths %>% filter(state %in% pre_covid_death1$state,!is.na(covid_19_deaths)) %>% select(-c(group, month))
```

## Expected Weekly Deaths - Average 
```{r}
expected_deaths <- pre_covid_death1 %>% mutate(mmwr_week = as.integer(mmwr_week), total_deaths = as.numeric(total_deaths)) %>%  group_by(state, mmwr_week) %>% summarize(expected_deaths = mean(total_deaths, na.rm = TRUE), .groups = "drop") 

excess_avg <- covid_deaths1 %>% mutate(mmwr_week = as.integer(mmwr_week), total_deaths = as.numeric(total_deaths), percent_of_expected_deaths = as.numeric(percent_of_expected_deaths)) %>% 
  left_join(expected_deaths, by = c("state", "mmwr_week")) %>%
  mutate(excess_deaths = total_deaths - expected_deaths, expected_deaths1 = total_deaths/(percent_of_expected_deaths/100), excess_deaths1 = total_deaths - expected_deaths1 )

excess_avg 

```

